name: Bucket Build

on:
  push:
    branches: '*'
  pull_request:
    branches: [ master ]

env:
  C3_ENV: ci

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: test
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mssql:
        #        image: mcr.microsoft.com/mssql/server:2019-latest
        image: mcr.microsoft.com/mssql/server:2019-CU27-ubuntu-20.04
        ports:
          - 1433:1433
        env:
          SA_PASSWORD: "Pala2023"
          ACCEPT_EULA: "Y"
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Pala2023 -Q 'SELECT 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Install SQLite3
        run: sudo apt-get install -y sqlite3

      - name: Install sqlcmd
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc
          curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get install -y mssql-tools18 unixodbc-dev

      - name: Initialize MSSQL Database
        run: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P Pala2023 -Q "CREATE DATABASE bucketTest" -C

      - name: Initialize PostgreSQL Database
        run: psql -h localhost -U postgres -c "CREATE USER runner SUPERUSER"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Cache Clojure Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-deps-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Install Clojure CLI
        run: |
          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/linux-install.sh
          chmod +x linux-install.sh
          sudo ./linux-install.sh

      - name: Run Clojure Tests
        run: clojure -M:test:spec-ci

      - name: Run ClojureScript Tests
        run: clojure -M:test:cljs once
